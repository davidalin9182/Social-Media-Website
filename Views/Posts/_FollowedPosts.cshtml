@using Social_Media_Website.ViewModels

@model List<PostsViewModel>



@foreach (var item in Model)
{
    <div class="home-post-item">
        @if (item.ProfileImageUrl == null)
        {
            <a type="button"><img class="post-profile-image" src="/images/default_avatar.png" /></a>
        }
        else
        {
            <a type="button"><img class="post-profile-image" src="@item.ProfileImageUrl" /></a>
        }       
        <div class="post-main">
            <div class="post-top-bar">

                <a type="button">@item.UserName</a>

                <div class="post-email-date">
                    @* <h4>@item.UserName</h4>*@
                    <h5>. @item.DateCreated.ToString("MMMM dd - HH:mm tt")</h5>
                </div>


            </div>
            <h2>@item.PostTitle</h2>
            <p>
                @item.PostContent
            </p>
            <div class="post-image-reactions">
                @if (item.Image != null)
                {
                    <div class="post-content-image">
                        <img src="@item.Image" />
                    </div>

                }
                else
                {

                }
                <div class="post-bottom-bar">
                    <div class="comments">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <button type="button" class="show-comments-button" data-postId="@item.Id">
                                <img src="/images/icon_comment.png" />
                            </button>
                        }
                        else
                        {
                            <a type="button" asp-controller="Account" asp-action="Login" class="not-logged-in-comment">
                                <img src="/images/icon_comment.png" />
                            </a>

                        }
                        <div>@item.CommentsCount</div>
                    </div>
                    <div class="likes">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <form method="post" asp-controller="Posts" asp-action="LikePost" asp-route-postId="@item.Id">

                                @if (item.IsLikedByCurrentUser == true)
                                {
                                    <button type="submit" class="unlike-button">
                                        <i class="fa-solid fa-heart"></i>
                                    </button>
                                }
                                else
                                {
                                    <button type="submit" class="like-button">
                                        <i class="fa-solid fa-heart"></i>
                                    </button>
                                }

                            </form>
                        }
                        else
                        {

                            <a type="button" asp-controller="Account" asp-action="Login" class="not-logged-in">
                                <i class="fa-solid fa-heart"></i>
                            </a>
                        }
                        <div>@item.LikesCount</div>
                    </div>



                </div>

            </div>
            <div class="comment-section-container" id="comment-section-container2-@item.Id" style="display: none;">
                <!-- Comment section partial will be displayed here -->
            </div>

            <div id="comment-post-container2-@item.Id" class="comment-post-container2" style="display: none;">
                <!-- Comment form will be displayed here -->
            </div>

        </div>


    </div>
    <div id="followed-posts-partial-container"></div>

}

<script>


    $(document).ready(function () {
        $(".show-comments-button").click(function () {
            var postId = $(this).data("postid");
            openCommentPostForm(postId);
        });

        $("body").on("submit", ".comment-form", function (e) {
            e.preventDefault();
            var postId = $(this).find("input[name='postId']").val();
            submitCommentForm(postId);
        });

        function openCommentPostForm(postId) {
            var commentPostContainer = $("#comment-post-container2-" + postId);
            var url = "/Posts/CreateComment?postId=" + postId;

            $.ajax({
                url: url,
                type: "GET",
                success: function (response) {
                    commentPostContainer.html(response);
                    commentPostContainer.show();
                    showComments(postId);
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        function showComments(postId) {
            var commentSection = $("#comment-section-container2-" + postId);

            if (commentSection.is(":visible")) {
                commentSection.hide();
                $("#comment-post-container2-" + postId).hide();
            } else {
                var url = "/Posts/GetCommentsForPost?postId=" + postId;

                $.ajax({
                    url: url,
                    type: "GET",
                    success: function (response) {
                        commentSection.html(response);
                        commentSection.show();

                    },
                    error: function (xhr, status, error) {
                        console.log(error);
                    }
                });
            }
        }


        function submitCommentForm(postId) {
            var commentForm = $(".comment-post-container2[data-postid='" + postId + "'] .comment-form");
            var formData = commentForm.serialize();

            $.ajax({
                url: "/Posts/CreateComment",
                type: "POST",
                data: formData,
                success: function (response) {
                    showComments(postId);
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }
    });



</script>